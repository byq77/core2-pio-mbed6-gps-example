name: Build and release
on:
  workflow_dispatch:
    inputs:
      target_branch:
        description: "The branch that will be used in the build"
        required: true
        default: "master"
  repository_dispatch: [trigger_firmware_build]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare arguments workflow_dispatch
        if: ${{ github.event_name == 'workflow_dispatch' }}
        env:
          FIRMWARE_REF: ${{ github.event.inputs.target_branch }}
        run: |
          echo "Triggered by workflow_dispatch event"

      - name: Prepare arguments repository_dispatch
        if: ${{ github.event.action == 'trigger_firmware_build' }}
        env:
          FIRMWARE_REF: ${{ github.event.client_payload.ref }}
        run: |
          echo "Triggered by repository_dispatch event"

      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          ref: ${{ env.FIRMWARE_REF }}

      - name: Installing platformio
        run: pip3 install -U platformio==6.1.6

      - name: Build current project using platformio 6.1.6
        run: |
          pio lib install
          pio run

      - name: Upload firmware files
        uses: actions/upload-artifact@v3
        with:
          name: firmware_files
          path: |
            ${{ github.workspace }}/.pio/build/core2/firmware.bin
            ${{ github.workspace }}/.pio/build/core2/firmware.hex
            ${{ github.workspace }}/LICENSE
  release:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event.action == 'trigger_firmware_build' }}
    steps:
      - name: Download firmware files
        uses: actions/download-artifact@v3
        with:
          name: firmware_files
          path: firmware_files
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: "true"
          token: ${{ secrets.WORKFLOW_PAT }}
          draft: "false"
          name: ${{ github.event.client_payload.release_name }}
          files: |
            firmware_files/firmware.bin
            firmware_files/firmware.hex
            firmware_files$/LICENSE
